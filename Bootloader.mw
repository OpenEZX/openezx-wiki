= General =

On this site we start to share information about the ezx bootloader. Motorola released the modified [[blob]] for the ezx phones. The source is available here: ftp://ftp.gpl-devices.org/pub/vendors/Motorola/A780/gpl-cd-20060421/a780-e680-blob.tar.bz2

= Enter the bootloader =

* '''A780:''' press camera and jogdial(scrollwheel) button while power on. 
* '''E680(i):''' press camera and volume down button while power on.

= Communication with the bootloader =

Based on the source code [[User:LaF0rge|Harald Welte]] wrote a userspace application for communication with the bootloader over USB. At the moment you can use it to load a selfcompiled kernel into RAM and execute it. This gives the possibility to test kernels without having to reflash the phone again and again. [[boot_usb]] is available here: http://svn.openezx.org/trunk/src/boot_usb/. You need [http://libusb.sourceforge.net/ libusb], version 0.1.12 is recommended.

= FLAG =

We have some problems where the flag values come from. [[Blob]], the bootloader, reads the flag value from the first four bytes of SDRAM. The question is who wrote these bytes into the SDRAM?  The only corresponding value we can find in the kernel source code is 0x7c7c7c7c. UPDATE: It looks like they don't have any real meaning. For reference here's a table of values we encountered so far, note that by tests we found out that they don't actually influence booting.

{| border="1"
|- style="background:#bfbfbf; font-weight: bold"
! Flags entry
! Image
! Meaning
|-
| 0x7c7c7c7c
| [http://people.openezx.org/stefan/photos/a780-bootloader-2.jpg]
| It's called OFF_FLAG in ezx.h
|-
| 0x95aa95aa
| Need to fill.
| Reproducible. Power off phone over night and enter bootloader first gives you this flag. Perhaps indicates long time off.  Also detected after the battery runs out, after recharging the value was set back to OFF_FLAG.
|-
| 0x958a95aa
| Need to fill.
| That's what Mickey's A780 is showing always. No kernel boot possible yet. Fancy colors and then colors slowly fading into white with some blue stripes.
|-
| 0xd5aa95aa
| [http://shell.studenti.unina.it/~ospite/tmp/d5aa95aa.jpg]
| Need to fill.
|-
| 0x558a95aa
| [http://shell.studenti.unina.it/~ospite/tmp/558a95aa.jpg]
| Need to fill.
|-
| 0x1caabca8
| Need to fill.
| Possible Low power.
|-
| 0x15babdae
| Need to fill.
| Low Power. System did not start. Only bootloader.
|-
| 0x60d56f34
| Need to fill.
| No idea.
|-
| 0x6b6b6b6b
| Need to fill.
| No idea.
|-
| 0x3c7c3c7c
| Need to fill.
| No idea.
|}

= RESET =

The reset value seems to be 0x00000001. More information needed here.

= BRESET =

The reset value seems to be 0x00000000. More information needed here.

= ARESET =

The reset value seems to be 0x00000000. More information needed here.

= Messages =

We have discovered two messages at the moment:

* No BP_WDI before reset start reflash code!
* start reflash code!

= Version and date =

Version 3.0 from 2004-05-18

If you get another version and date on your phone please add here.

= Booting your own kernel =

# Power off the phone
# Power on the phone and enter the bootloader (see above)
# Attach the phone to your computer via USB
# Run <tt>./boot_usb zImage</tt> on your computer, where [http://svn.openezx.org/trunk/src/boot_usb/ boot_usb] is compiled via a simple "make", and zImage is the kernel image you want to boot (e.g. [http://people.openezx.org/laforge/kernel/zImage-2.6.16.13-ezx3-32mb-p1 this one]).
# The kernel image will be transfered to your phone and it will boot using that kernel.
