Here is how to get a shell on the phone, using a Linux host computer. This process gets you under the hood where you can mess up your phone sufficiently that it won't boot any longer. We don't know how to re-flash the A780 yet. If you don't ''really'' know what you're doing and if you aren't ready to risk converting your phone to a paperweight, I'd advise that you wait until the folks on the bleeding edge figure out how to flash the phone.

''This won't work'' if your system already has a network configured that would
include 192.168.1.2 . Since this is a network commonly used for DHCP,
that could be a problem.

On your Linux host, load the USB ATM (modem) and USB network drivers:

 modprobe usbnet
 modprobe cdc-acm

Go into the setup application and configure the USB mode to be '''modem'''.

Plug the phone and the host together with a USB cable. On the console
you should see:

 cdc_acm 4-2:1.0: ttyACM0: USB ACM device

You can play back the console messages with the '''dmesg''' command.
If you look in /proc/bus/devices, you will find a device with
a manufacturer ID of ''Motorola'' and a product ID of ''Motorola USB Modem''

Install minicom if it's not installed. On Debian, I used:

 apt-get install minicom

Start minicom. Type '''Control-A''' and then '''o''' to get the setup screen.
Set the serial port to '''/dev/ttyACM0''' . Save that as the default.
Exit out of minicom with '''Control-A''' '''x''' and start it again.

At this point you can type Hayes modem commands to the phone. This is useful
for GPRS, etc., but that's another tutorial.

Type '''AT+mode=99''' followed by carriage return.

The phone goes out of modem mode at this point, so you won't get an "OK".

Exit minicom.

When you gave that "mode" command, the phone caused the host to re-enumerate
its USB device - which looks like unplugging it and plugging it in again, but
you didn't touch the cable. Now, the USB device has changed its flavor! The
console should say something like:

 usb 4-2: USB disconnect, address 8
 usb 4-2: new full speed USB device using uhci_hcd and address 9
 usb0: register usbnet at usb-0000:00:10.2-2, pseudo-MDLM (BLAN) device, 8e:36:06:d5:16:9d

And now /proc/bus/devices should contain a device with manufacturer ID of
Motorola and product id of '''Motorola USBLAN'''.

Configure the network interface with

 ifconfig usb0 192.168.1.1 netmask 255.255.255.0

Telnet to 192.168.1.2 . Wait about half a minute and you'll get a login prompt.

Log in as '''root'''. There's no password set.


== NOTES ==

Someone wrote that the device actually sends a DHCP query before it
settles on 192.168.1.2 as the default address. I have so far not been able to
confirm this.

The phone is also running a Samba server.

The command line will be somewhat more useful once you install busybox.

== LICENSE NOTE ==

The default license for this site is GNU FDL. In order that this page be undisputably Free Software, we waive or interpret some provisions of the GNU FDL for this page:

There are no invariant sections connected with this page.

The sentence:

 You may not use technical measures to obstruct or control the reading or further copying of the copies you make or distribute.

is sufficiently vague that it could be used to prevent the use of login security and file permissions, a common feature of the GNU system, which is not our intent. What we desire is that once this page is presented to or otherwise made available to someone, there must be no technical restriction mechanism that is intended to keep that person from further copying that page or creating a modified copy.
