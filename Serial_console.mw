== [[EMU]] in serial mode ==

It is possible to get a serial console without opening the phone.

You can set the [[EMU]] into a mode which acts as serial port. You get RX and TX from the mini usb plug, but need an external
level shifter like MAX3232 and a power source for the MAX3232.

In the file arch/arm/mach-pxa/ezx.c you need to enable the line emu_switch_to(EMU_SWITCH_TO_UART); and comment out emu_switch_to(EMU_SWITCH_TO_USB); instead. Also you need to add '''console=ttyS0,115200n8 console=tty0''' to CONFIG_CMDLINE. console=tty0 is needed to see the bootmessages on the framebuffer at the same time.

The next patchset, ezx8, will contain a patch which allows a [[EMU]] mode switch via a config option. 

=== Build your own [[EMU]] - serial adapter ===

To build your own [[EMU]] to serial adapter you need an external 3.3V power source since the 2.775V from the cell phone is
believed to be too weak to power the MAX3232 in some cases.

The default color coding for the mini USB signaling is included in the schematic.

Parts used:
* 1* MAX3232
* 5* Capacitor 0.1ÂµF (= 100nF, Code 104)
* 1* [[http://en.wikipedia.org/wiki/Universal_Serial_Bus#Mini-USB_signaling Mini USB plug type B]]
* 1* [[http://en.wikipedia.org/wiki/D-subminiature DE-9 female connector]]

[[Image:Emu-uart.png]]

== Soldering wires on the test pads ==
=== [[A780]] ===
The STUART of the AP (ttyS2) can be used as a serial console.  There are two test pads (TP440=TxD and TP441=RxD) on the PCB.  Also, you'll have to pass "console=ttyS2" to the kernel at boot time (which doesn't seem possible with the original bootloader).  However, if you run your own kernel, you can easily add this to CONFIG_CMDLINE.
=== [[E680]] ===
We are pretty sure that there are also test pads for an uart on test pads of the [[E680]] PCB. Unfortunately we don't get it working until now.
=== [[Rokr E2]] ===
On the Rokr E2 boards there are two debug ports, one on the front and one on the back.  The one on the front is the debug/jtag port for the applications processor (PXA270).  It is located on the opposite side from the keylock switch. The one on the back is assumed to be the debug/jtag port for the baseband.  The connector is made by FOXCONN, QT510166-L010-7F.  The male connector that you will need to access the port without soldering under a microscope is QT500166-L020-9F.  

Applicatons processor debug port:
                     
     ?(NC)       GND    ST_TDX    VSUPPLY
  ?(NC) \  ?(NC)  | ?(NC) |  ST_RDX /  
     \   \    \   |   |   |    /   /
      1   2   3   4   5   6   7   8       |
      |   |   |   |   |   |   |   |       |
 #######################################  |
 #    |   |   |   |   |   |   |   |    #  |
 #  #################################  #  |
 #  #################################  #  |  <-Side of
 #  #################################  #  |    the PCB
 #    |   |   |   |   |   |   |   |    #  |
 #######################################  |
      |   |   |   |   |   |   |   |       |
     16  15  14  13  12  11  10   9       |
    /   /    /   |    |   \    \   \
 nTRST /   TDO   | ?(D/NC) \ nRESET \
    TDI        TMS        TCK    ?(DATA)

The lines marked NC are either inputs to an unknown source or they are no connects.  

ST_TDX and ST_RDX, GPIO 47 and 46 respectively, are configured as a serial port in sumantra.c of the kernel and hw_init.c of the boot loader.  

[[Category:A780]]
[[Category:E680]]
[[Category:Rokr E2]]
