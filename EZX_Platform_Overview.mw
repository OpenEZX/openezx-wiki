[[Category:Hardware]]

Taken from Harald Welte's OpenEZX slide presentation (Dec 2005) available [http://events.ccc.de/congress/2005/fahrplan/attachments/677-FreeSoftwareGSMPhone-Slides.pdf here] as a pdf.

Original Disclaimer: All Information is based on observation (of A780), and may be wrong



==Hardware==

*A Motorola Neptune LTE based mobile phone (BP) plus
*A PXA270 Xscale (AP) based PDA in one case


===Application Processor (PXA270)===

*Runs heavily modified linux-2.4.20 kernel
*48MB RAM
*48MB "wireless" flash
*software-configurable clock speed up to 400MHz
*JTAG port on test pads, BSDL file and JFlash available
*SPI/SSP interface to PCAP and BP
*directly attached to LCD display
*directly attached to touch screen, buttons
*directly attached to camera module


===Baseband Processor (Neptune LTE)===

*contains ARM7TDMI for GSM stack
*contains 566xx DSP for digital baseband
*JTAG port on test pads, but no BSDL file
*Connected to Application processor via USB
*SPI/SSP interface to PCAP and AP
*UART connected to AGPS processor
*Connects to GSM SIM module
*8MB external flash
*2MB external RAM


===AGPS Processor (Motorola Telematics MG4100)===

*Attached to UART of BP
*Has it's own Flash and RAM (2MB?)


===PCAP2===

*Power management, Clock and Audio Peripheral (PCAP)
*produces a 16 different voltages
*handles all mono/stereo audio
*connected to 2 speakers, microphone, vibrator
*clock generation
*SPI/SSP interface to AP and BP
*Backlight control


===RF Subsystems (A780)===
====RF6003====
*fractional-n RF synthesizer
====RF2722====
*GPRS/EDGE capable receiver (RX)
====RF3144====
*quad-band power amplifier (TX)



==Software==

===linux-2.4.20===
*MontaVista "mobilinux" additions
*dynamic power management
*EZX arm subarchitecture
*low-level drivers for:
**SPI/SSP
**PCAP Audio (mono/stereo/headset/...)
**Vibrator (/dev/vibrator)
**USB host port attached to BP
**USB device port (belcarra usbd, not gadget)
**Transflash/SD/MMC
*THREE proprietary flash file systems
**Intel VFM (hatcreek.o)
**m-systems DiskOnChip (tffs.o)
**third unknown


===Modules===

====mux_cli.o====
*hooks into special functions of USB host driver
*provides GSM TS07.10 (de)multiplex
*userspace has tty devices

====gprsv.o====
*implements GPRS line discipline for mux_cli ttys
*hooks into netfilter to intercept DNS packets ?!?
*provides gprs0 / grps1 network devices

====ipsec.o====
*proprietary ipsec stack (don't we already have two GPL licensed?)
*Copyright Certicom Corp


===Libraries===
*glibc

====Bluetooth====
*proprietary userspace program directly opens HCI

====GPS====
*no NMEA, no serial device emulation :(
*proprietary library via mux_cli kernel module

====UI====
*embeddedQt
*Motorola EZX toolkit
*Low-level devices (framebufffer, etc) accessable.


===Bootloader===
*EZX bootloader
*based on GPL licensed blob
*low-level initialization code (GPIO config, clock, ...)
*vendor specific USB device allows for:
**transfer of executable code from USB host
**execution of transferred executable
*serial console code is present in binary (but not used)
*PST/RSD firmware updates work by uploading a "ramloader"


==="Enhanced Mini USB" (EMU)===

====Port Modes====
*Depending on pullup/pulldown/... resistors
*USB device port
*Serial port (RS232 at 3.3V levels)
*Stereo audio signal
*500mA charger
*Carkit (easy install, professionally installed)
*Factory test

====USB Configurations====
*Official configs
**cdc_acm (serial modem emulation for host pc)
**USB mass storage (transflash and VFAT-on-TFFS devices)
*Undocumented configs
**usbnet "network-BLAN"
***Network device over USB
***Allows telnet into phone
**PST
***Mode used by PST Windows App
**DSPlog
***Apparently a way to dump data from DSP
**NetMonitor
***supposedly for GSM network monitor
**cfg11 (ROKR E2)
***??
