{| border="1"
|- style="background:#bfbfbf; font-weight: bold"
! Summary
!
|-
| Product name:
| Q9h
|-
| Codename:
| -
|-
| Generation:
|
|-
| [[Project_devices |Project device]]:
| No
|-
| [[Project_Status |Device support]]:
| -
|-
| Motorola source code:
| (none)
|-
| PCB pictures: [http://picasaweb.google.com/chrisfriedt/Q9hTeardown]
|}


[[Image:Q9h.jpg]]
----


== Motorola Q9h Features ==

*325Mhz OMAP 2420 ARM1136 CPU (ARMv6 ISA)
*220Mhz TMS320C55x DSP
*Bluetooth Class 2 V2.0 (A2DP & AVRCP support)
*320x240 16-bit display
*2MP Camera (still), 320x240 (video) 3GP, MPEG4, WMV
*Quad-Band GSM, Tri-Band UMTS
*Assisted-GPS
*2D/3D PowerVR/MBX Graphics Accelerator up to 2M polygons/sec

For more information, see article on pdadb.net[http://pdadb.net/index.php?m=specs&id=307&view=1&c=motorola_moto_q_9h_q9h].

== Linux ==

Currently, no Linux port is available. However, there is already substantial support for the OMAP2420 in the Linux kernel (mainly contributed by Nokia for their internet tablets). 

This project will sync with the linux-omap git tree [http://git.kernel.org/?p=linux/kernel/git/tmlind/linux-omap-2.6.git].

=== Porting Strategy ===

* Synchronize kernel source with linux-omap git
* Create branch q9h
* Copy the generic OMAP board file, and rename board-motorola-q9h.c
* Obtain a GPIO register dump using HaRET
* Use the GPIO register dump to set the initial GPIO configuration in board-motorola-q9h.c
* Obtain a UART / console over the D+/D- pins of the Q9h USB connector
* Likewise, use HaRET to dump the LCD configuration registers, and bring up the initial LCD configuration
* Determine the keypad mapping for the OMAP keypad controller & enter the scancodes in board-motorola-q9h.c
* Request a new, official, mach-type (number) used to identify the board inside the Linux kernel
* Submit initial port upstream to linux-omap git
* Notify openezx and other groups about the port
* Continue to add device features over time (gpio device, i2c, power switches, etc) and submit changes upstream

=== Misc ===

* build an initramfs image for the initial userspace
* provide haret booting instructions, zImage, and initramfs image to community
* build development filesystems once the MMC card is working
** OpenEmbedded / Angstrom
** Gentoo
* submit relevent OE configuration upstream
* integrate miscellaneous userspace components (bluez, PowerVR OpenGL ES 1.0 libraries, AGPS, etc)
* build a generic Android filesystem
* eventually add hardware control libraries to Android build, and create new vendor / platform

== Chips used ==
* TI OMAP 2420 SoC [http://focus.ti.com/pdfs/wtbu/TI_omap2420.pdf]
* TI TWL92230C Power Management Companion IC for the OMAP 24xx [http://focus.ti.com/lit/ds/symlink/twl92230c.pdf]
* SKY77413-21 Skyworks WCDMA FEM [http://www.skyworksinc.com/uploads/documents/200415p2.pdf]
* BCM2045KWBG Broadcom Bluetooth Module [http://www.broadcom.com/collateral/pb/2045-PB03-R.pdf]
* SC13783VK5 Freescale OEM_EXC NEED TP(?)
* SC29364VK0 Freescale OEM_EXC NEED TP(?)
* MMM6000 Freescale Quad-Band GSM/EDGE Transciever [http://www.freescale.com/files/wireless_comm/doc/fact_sheet/MMM60006027FS.pdf]
* MMM6007 Freescale Tri-Band WCDMA Transciever [http://www.freescale.com/files/wireless_comm/doc/fact_sheet/MMM60006027FS.pdf]
* SiRF 5000 AGPS Receiver [http://www.sirf.com/products/GSCi5000ProductInsert.pdf]
* MicroChip PIC 18F2420 [http://ww1.microchip.com/downloads/en/DeviceDoc/39631E.pdf]

== External Links ==

[[Category:Hardware]]
[[Category:Q]]
