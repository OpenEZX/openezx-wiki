In order to crosscompile you will need a compiler/linker/archiver, include files and a libc for your target machine. 

=== Toolchain ===

To crosscompile your own software for the EZX phone, you need a toolchain. There are currenly two toolchains floating around, both based on Dan Kegel's "crosstool" scripts to bootstrap the tools. The
only important note is that the default ARM targets for crosstool will 
not work on this phone -- it uses a different word order ("VFP") for
the floating point emulation.  The scripts at the linked site automatically apply a needed patch to binutils.

You can find a good instruction on this site: http://marcus.bluetroll.se/e680/

Theres also http://lsb.blogdns.net/ezx-crosstool which can be used together with http://lsb.blogdns.net/ezx-devkit to build native GUI apps (i.e. they dont need opie)

If you are using an RPM-based Linux distribution, you can try the toolchain available at http://www.codeminders.com/ezx/. Binary RPMs there are tested of Redhat Fedora Core 5 x86_64 architecture. You should be able to rebuild from SRPMs on ther distributions as well. SRPM produces several RPMs, but mostly likely you just need to install  "crosstool-gcc-3.3.2-glibc-2.3.2-arm-linux-devel" if you just want to compile applications. RPMs are provided by [http://www.codeminders.com Codeminders].

Another possibility is to use the [http://www.mkezx.org/ MkEzx build framework] which starts by building a crosstool based on ezx-crosstool then allows  you to produce native application by automatically fetching source code, applying patches, cross-compiling and building packages for you.

[[Category:Development]]
